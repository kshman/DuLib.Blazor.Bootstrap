@inherits ButtonBase

@if (DropMenu is not null)
{
	<li class="@ListClass">
		@if (Href.IsHave())
		{
			<a class="@CssClass" href="@Href" target="@Target" id="@Id" @attributes="UserAttrs">
				@Text
				@ChildContent
			</a>
		}
		else
		{
			<a role="button" class="@CssClass" id="@Id" @attributes="UserAttrs" @onclick="HandleOnClickAsync">
				@Text
				@ChildContent
			</a>
		}
	</li>
}
else
{
	if (Href.IsHave())
	{
		<a class="@CssClass" href="@Href" target="@Target" id="@Id" @attributes="UserAttrs">
			@Text
			@ChildContent
		</a>
	}
	else
	{
		<button type="@ActualType.ToHtml()" class="@CssClass" formtarget="@Target" id="@Id" @attributes="UserAttrs"
		@onclick="HandleOnClickAsync">
			@Text
			@ChildContent
		</button>
	}
}

@code {
	[CascadingParameter] public DropMenu? DropMenu { get; set; }

	/// <summary>URL 링크 지정.</summary>
	[Parameter] public string? Href { get; set; }
	/// <summary>타겟 지정.</summary>
	[Parameter] public string? Target { get; set; }

	[Parameter] public string? ListClass { get; set; }

	//
	protected override void OnComponentClass(CssCompose css)
	{
		if (DropMenu is null)
		{
			css
				.Add("btn")
				.Add(ActualColor.ToButtonCss(ActualOutline));
		}
		else
		{
			css
				.Add("dropdown-item");
		}

		css.Add(ActualSize.ToCss("btn"));
	}
}
